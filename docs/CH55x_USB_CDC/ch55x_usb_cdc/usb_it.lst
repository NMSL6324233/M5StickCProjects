                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module usb_it
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _USB_EP2_OUT
                                     12 	.globl _USB_EP2_IN
                                     13 	.globl _USB_EP1_IN
                                     14 	.globl _USB_EP0_OUT
                                     15 	.globl _USB_EP0_IN
                                     16 	.globl _USB_EP0_SETUP
                                     17 	.globl _UIF_BUS_RST
                                     18 	.globl _UIF_DETECT
                                     19 	.globl _UIF_TRANSFER
                                     20 	.globl _UIF_SUSPEND
                                     21 	.globl _UIF_HST_SOF
                                     22 	.globl _UIF_FIFO_OV
                                     23 	.globl _U_SIE_FREE
                                     24 	.globl _U_TOG_OK
                                     25 	.globl _U_IS_NAK
                                     26 	.globl _ADC_CHAN0
                                     27 	.globl _ADC_CHAN1
                                     28 	.globl _CMP_CHAN
                                     29 	.globl _ADC_START
                                     30 	.globl _ADC_IF
                                     31 	.globl _CMP_IF
                                     32 	.globl _CMPO
                                     33 	.globl _U1RI
                                     34 	.globl _U1TI
                                     35 	.globl _U1RB8
                                     36 	.globl _U1TB8
                                     37 	.globl _U1REN
                                     38 	.globl _U1SMOD
                                     39 	.globl _U1SM0
                                     40 	.globl _S0_R_FIFO
                                     41 	.globl _S0_T_FIFO
                                     42 	.globl _S0_FREE
                                     43 	.globl _S0_IF_BYTE
                                     44 	.globl _S0_IF_FIRST
                                     45 	.globl _S0_IF_OV
                                     46 	.globl _S0_FST_ACT
                                     47 	.globl _CP_RL2
                                     48 	.globl _C_T2
                                     49 	.globl _TR2
                                     50 	.globl _EXEN2
                                     51 	.globl _TCLK
                                     52 	.globl _RCLK
                                     53 	.globl _EXF2
                                     54 	.globl _CAP1F
                                     55 	.globl _TF2
                                     56 	.globl _RI
                                     57 	.globl _TI
                                     58 	.globl _RB8
                                     59 	.globl _TB8
                                     60 	.globl _REN
                                     61 	.globl _SM2
                                     62 	.globl _SM1
                                     63 	.globl _SM0
                                     64 	.globl _IT0
                                     65 	.globl _IE0
                                     66 	.globl _IT1
                                     67 	.globl _IE1
                                     68 	.globl _TR0
                                     69 	.globl _TF0
                                     70 	.globl _TR1
                                     71 	.globl _TF1
                                     72 	.globl _RXD
                                     73 	.globl _PWM1_
                                     74 	.globl _TXD
                                     75 	.globl _PWM2_
                                     76 	.globl _AIN3
                                     77 	.globl _VBUS1
                                     78 	.globl _INT0
                                     79 	.globl _TXD1_
                                     80 	.globl _INT1
                                     81 	.globl _T0
                                     82 	.globl _RXD1_
                                     83 	.globl _PWM2
                                     84 	.globl _T1
                                     85 	.globl _UDP
                                     86 	.globl _UDM
                                     87 	.globl _TIN0
                                     88 	.globl _CAP1
                                     89 	.globl _T2
                                     90 	.globl _AIN0
                                     91 	.globl _VBUS2
                                     92 	.globl _TIN1
                                     93 	.globl _CAP2
                                     94 	.globl _T2EX
                                     95 	.globl _RXD_
                                     96 	.globl _TXD_
                                     97 	.globl _AIN1
                                     98 	.globl _UCC1
                                     99 	.globl _TIN2
                                    100 	.globl _SCS
                                    101 	.globl _CAP1_
                                    102 	.globl _T2_
                                    103 	.globl _AIN2
                                    104 	.globl _UCC2
                                    105 	.globl _TIN3
                                    106 	.globl _PWM1
                                    107 	.globl _MOSI
                                    108 	.globl _TIN4
                                    109 	.globl _RXD1
                                    110 	.globl _MISO
                                    111 	.globl _TIN5
                                    112 	.globl _TXD1
                                    113 	.globl _SCK
                                    114 	.globl _IE_SPI0
                                    115 	.globl _IE_TKEY
                                    116 	.globl _IE_USB
                                    117 	.globl _IE_ADC
                                    118 	.globl _IE_UART1
                                    119 	.globl _IE_PWMX
                                    120 	.globl _IE_GPIO
                                    121 	.globl _IE_WDOG
                                    122 	.globl _PX0
                                    123 	.globl _PT0
                                    124 	.globl _PX1
                                    125 	.globl _PT1
                                    126 	.globl _PS
                                    127 	.globl _PT2
                                    128 	.globl _PL_FLAG
                                    129 	.globl _PH_FLAG
                                    130 	.globl _EX0
                                    131 	.globl _ET0
                                    132 	.globl _EX1
                                    133 	.globl _ET1
                                    134 	.globl _ES
                                    135 	.globl _ET2
                                    136 	.globl _E_DIS
                                    137 	.globl _EA
                                    138 	.globl _P
                                    139 	.globl _F1
                                    140 	.globl _OV
                                    141 	.globl _RS0
                                    142 	.globl _RS1
                                    143 	.globl _F0
                                    144 	.globl _AC
                                    145 	.globl _CY
                                    146 	.globl _UEP1_DMA_H
                                    147 	.globl _UEP1_DMA_L
                                    148 	.globl _UEP1_DMA
                                    149 	.globl _UEP0_DMA_H
                                    150 	.globl _UEP0_DMA_L
                                    151 	.globl _UEP0_DMA
                                    152 	.globl _UEP2_3_MOD
                                    153 	.globl _UEP4_1_MOD
                                    154 	.globl _UEP3_DMA_H
                                    155 	.globl _UEP3_DMA_L
                                    156 	.globl _UEP3_DMA
                                    157 	.globl _UEP2_DMA_H
                                    158 	.globl _UEP2_DMA_L
                                    159 	.globl _UEP2_DMA
                                    160 	.globl _USB_DEV_AD
                                    161 	.globl _USB_CTRL
                                    162 	.globl _USB_INT_EN
                                    163 	.globl _UEP4_T_LEN
                                    164 	.globl _UEP4_CTRL
                                    165 	.globl _UEP0_T_LEN
                                    166 	.globl _UEP0_CTRL
                                    167 	.globl _USB_RX_LEN
                                    168 	.globl _USB_MIS_ST
                                    169 	.globl _USB_INT_ST
                                    170 	.globl _USB_INT_FG
                                    171 	.globl _UEP3_T_LEN
                                    172 	.globl _UEP3_CTRL
                                    173 	.globl _UEP2_T_LEN
                                    174 	.globl _UEP2_CTRL
                                    175 	.globl _UEP1_T_LEN
                                    176 	.globl _UEP1_CTRL
                                    177 	.globl _UDEV_CTRL
                                    178 	.globl _USB_C_CTRL
                                    179 	.globl _TKEY_DATH
                                    180 	.globl _TKEY_DATL
                                    181 	.globl _TKEY_DAT
                                    182 	.globl _TKEY_CTRL
                                    183 	.globl _ADC_DATA
                                    184 	.globl _ADC_CFG
                                    185 	.globl _ADC_CTRL
                                    186 	.globl _SBAUD1
                                    187 	.globl _SBUF1
                                    188 	.globl _SCON1
                                    189 	.globl _SPI0_SETUP
                                    190 	.globl _SPI0_CK_SE
                                    191 	.globl _SPI0_CTRL
                                    192 	.globl _SPI0_DATA
                                    193 	.globl _SPI0_STAT
                                    194 	.globl _PWM_CK_SE
                                    195 	.globl _PWM_CTRL
                                    196 	.globl _PWM_DATA1
                                    197 	.globl _PWM_DATA2
                                    198 	.globl _T2CAP1H
                                    199 	.globl _T2CAP1L
                                    200 	.globl _T2CAP1
                                    201 	.globl _TH2
                                    202 	.globl _TL2
                                    203 	.globl _T2COUNT
                                    204 	.globl _RCAP2H
                                    205 	.globl _RCAP2L
                                    206 	.globl _RCAP2
                                    207 	.globl _T2MOD
                                    208 	.globl _T2CON
                                    209 	.globl _SBUF
                                    210 	.globl _SCON
                                    211 	.globl _TH1
                                    212 	.globl _TH0
                                    213 	.globl _TL1
                                    214 	.globl _TL0
                                    215 	.globl _TMOD
                                    216 	.globl _TCON
                                    217 	.globl _XBUS_AUX
                                    218 	.globl _PIN_FUNC
                                    219 	.globl _P3_DIR_PU
                                    220 	.globl _P3_MOD_OC
                                    221 	.globl _P3
                                    222 	.globl _P2
                                    223 	.globl _P1_DIR_PU
                                    224 	.globl _P1_MOD_OC
                                    225 	.globl _P1
                                    226 	.globl _ROM_CTRL
                                    227 	.globl _ROM_DATA_H
                                    228 	.globl _ROM_DATA_L
                                    229 	.globl _ROM_DATA
                                    230 	.globl _ROM_ADDR_H
                                    231 	.globl _ROM_ADDR_L
                                    232 	.globl _ROM_ADDR
                                    233 	.globl _GPIO_IE
                                    234 	.globl _IP_EX
                                    235 	.globl _IE_EX
                                    236 	.globl _IP
                                    237 	.globl _IE
                                    238 	.globl _WDOG_COUNT
                                    239 	.globl _RESET_KEEP
                                    240 	.globl _WAKE_CTRL
                                    241 	.globl _CLOCK_CFG
                                    242 	.globl _PCON
                                    243 	.globl _GLOBAL_CFG
                                    244 	.globl _SAFE_MOD
                                    245 	.globl _DPH
                                    246 	.globl _DPL
                                    247 	.globl _SP
                                    248 	.globl _B
                                    249 	.globl _ACC
                                    250 	.globl _PSW
                                    251 	.globl _pEndPoint_SETUP_CallBack
                                    252 	.globl _pEndPoint_IN_CallBack
                                    253 	.globl _pEndPoint_SOF_CallBack
                                    254 	.globl _pEndPoint_OUT_CallBack
                                    255 	.globl _NOP_Process
                                    256 	.globl _USBInterrupt
                                    257 ;--------------------------------------------------------
                                    258 ; special function registers
                                    259 ;--------------------------------------------------------
                                    260 	.area RSEG    (ABS,DATA)
      000000                        261 	.org 0x0000
                           0000D0   262 _PSW	=	0x00d0
                           0000E0   263 _ACC	=	0x00e0
                           0000F0   264 _B	=	0x00f0
                           000081   265 _SP	=	0x0081
                           000082   266 _DPL	=	0x0082
                           000083   267 _DPH	=	0x0083
                           0000A1   268 _SAFE_MOD	=	0x00a1
                           0000B1   269 _GLOBAL_CFG	=	0x00b1
                           000087   270 _PCON	=	0x0087
                           0000B9   271 _CLOCK_CFG	=	0x00b9
                           0000A9   272 _WAKE_CTRL	=	0x00a9
                           0000FE   273 _RESET_KEEP	=	0x00fe
                           0000FF   274 _WDOG_COUNT	=	0x00ff
                           0000A8   275 _IE	=	0x00a8
                           0000B8   276 _IP	=	0x00b8
                           0000E8   277 _IE_EX	=	0x00e8
                           0000E9   278 _IP_EX	=	0x00e9
                           0000C7   279 _GPIO_IE	=	0x00c7
                           008584   280 _ROM_ADDR	=	0x8584
                           000084   281 _ROM_ADDR_L	=	0x0084
                           000085   282 _ROM_ADDR_H	=	0x0085
                           008F8E   283 _ROM_DATA	=	0x8f8e
                           00008E   284 _ROM_DATA_L	=	0x008e
                           00008F   285 _ROM_DATA_H	=	0x008f
                           000086   286 _ROM_CTRL	=	0x0086
                           000090   287 _P1	=	0x0090
                           000092   288 _P1_MOD_OC	=	0x0092
                           000093   289 _P1_DIR_PU	=	0x0093
                           0000A0   290 _P2	=	0x00a0
                           0000B0   291 _P3	=	0x00b0
                           000096   292 _P3_MOD_OC	=	0x0096
                           000097   293 _P3_DIR_PU	=	0x0097
                           0000C6   294 _PIN_FUNC	=	0x00c6
                           0000A2   295 _XBUS_AUX	=	0x00a2
                           000088   296 _TCON	=	0x0088
                           000089   297 _TMOD	=	0x0089
                           00008A   298 _TL0	=	0x008a
                           00008B   299 _TL1	=	0x008b
                           00008C   300 _TH0	=	0x008c
                           00008D   301 _TH1	=	0x008d
                           000098   302 _SCON	=	0x0098
                           000099   303 _SBUF	=	0x0099
                           0000C8   304 _T2CON	=	0x00c8
                           0000C9   305 _T2MOD	=	0x00c9
                           00CBCA   306 _RCAP2	=	0xcbca
                           0000CA   307 _RCAP2L	=	0x00ca
                           0000CB   308 _RCAP2H	=	0x00cb
                           00CDCC   309 _T2COUNT	=	0xcdcc
                           0000CC   310 _TL2	=	0x00cc
                           0000CD   311 _TH2	=	0x00cd
                           00CFCE   312 _T2CAP1	=	0xcfce
                           0000CE   313 _T2CAP1L	=	0x00ce
                           0000CF   314 _T2CAP1H	=	0x00cf
                           00009B   315 _PWM_DATA2	=	0x009b
                           00009C   316 _PWM_DATA1	=	0x009c
                           00009D   317 _PWM_CTRL	=	0x009d
                           00009E   318 _PWM_CK_SE	=	0x009e
                           0000F8   319 _SPI0_STAT	=	0x00f8
                           0000F9   320 _SPI0_DATA	=	0x00f9
                           0000FA   321 _SPI0_CTRL	=	0x00fa
                           0000FB   322 _SPI0_CK_SE	=	0x00fb
                           0000FC   323 _SPI0_SETUP	=	0x00fc
                           0000C0   324 _SCON1	=	0x00c0
                           0000C1   325 _SBUF1	=	0x00c1
                           0000C2   326 _SBAUD1	=	0x00c2
                           000080   327 _ADC_CTRL	=	0x0080
                           00009A   328 _ADC_CFG	=	0x009a
                           00009F   329 _ADC_DATA	=	0x009f
                           0000C3   330 _TKEY_CTRL	=	0x00c3
                           00C5C4   331 _TKEY_DAT	=	0xc5c4
                           0000C4   332 _TKEY_DATL	=	0x00c4
                           0000C5   333 _TKEY_DATH	=	0x00c5
                           000091   334 _USB_C_CTRL	=	0x0091
                           0000D1   335 _UDEV_CTRL	=	0x00d1
                           0000D2   336 _UEP1_CTRL	=	0x00d2
                           0000D3   337 _UEP1_T_LEN	=	0x00d3
                           0000D4   338 _UEP2_CTRL	=	0x00d4
                           0000D5   339 _UEP2_T_LEN	=	0x00d5
                           0000D6   340 _UEP3_CTRL	=	0x00d6
                           0000D7   341 _UEP3_T_LEN	=	0x00d7
                           0000D8   342 _USB_INT_FG	=	0x00d8
                           0000D9   343 _USB_INT_ST	=	0x00d9
                           0000DA   344 _USB_MIS_ST	=	0x00da
                           0000DB   345 _USB_RX_LEN	=	0x00db
                           0000DC   346 _UEP0_CTRL	=	0x00dc
                           0000DD   347 _UEP0_T_LEN	=	0x00dd
                           0000DE   348 _UEP4_CTRL	=	0x00de
                           0000DF   349 _UEP4_T_LEN	=	0x00df
                           0000E1   350 _USB_INT_EN	=	0x00e1
                           0000E2   351 _USB_CTRL	=	0x00e2
                           0000E3   352 _USB_DEV_AD	=	0x00e3
                           00E5E4   353 _UEP2_DMA	=	0xe5e4
                           0000E4   354 _UEP2_DMA_L	=	0x00e4
                           0000E5   355 _UEP2_DMA_H	=	0x00e5
                           00E7E6   356 _UEP3_DMA	=	0xe7e6
                           0000E6   357 _UEP3_DMA_L	=	0x00e6
                           0000E7   358 _UEP3_DMA_H	=	0x00e7
                           0000EA   359 _UEP4_1_MOD	=	0x00ea
                           0000EB   360 _UEP2_3_MOD	=	0x00eb
                           00EDEC   361 _UEP0_DMA	=	0xedec
                           0000EC   362 _UEP0_DMA_L	=	0x00ec
                           0000ED   363 _UEP0_DMA_H	=	0x00ed
                           00EFEE   364 _UEP1_DMA	=	0xefee
                           0000EE   365 _UEP1_DMA_L	=	0x00ee
                           0000EF   366 _UEP1_DMA_H	=	0x00ef
                                    367 ;--------------------------------------------------------
                                    368 ; special function bits
                                    369 ;--------------------------------------------------------
                                    370 	.area RSEG    (ABS,DATA)
      000000                        371 	.org 0x0000
                           0000D7   372 _CY	=	0x00d7
                           0000D6   373 _AC	=	0x00d6
                           0000D5   374 _F0	=	0x00d5
                           0000D4   375 _RS1	=	0x00d4
                           0000D3   376 _RS0	=	0x00d3
                           0000D2   377 _OV	=	0x00d2
                           0000D1   378 _F1	=	0x00d1
                           0000D0   379 _P	=	0x00d0
                           0000AF   380 _EA	=	0x00af
                           0000AE   381 _E_DIS	=	0x00ae
                           0000AD   382 _ET2	=	0x00ad
                           0000AC   383 _ES	=	0x00ac
                           0000AB   384 _ET1	=	0x00ab
                           0000AA   385 _EX1	=	0x00aa
                           0000A9   386 _ET0	=	0x00a9
                           0000A8   387 _EX0	=	0x00a8
                           0000BF   388 _PH_FLAG	=	0x00bf
                           0000BE   389 _PL_FLAG	=	0x00be
                           0000BD   390 _PT2	=	0x00bd
                           0000BC   391 _PS	=	0x00bc
                           0000BB   392 _PT1	=	0x00bb
                           0000BA   393 _PX1	=	0x00ba
                           0000B9   394 _PT0	=	0x00b9
                           0000B8   395 _PX0	=	0x00b8
                           0000EF   396 _IE_WDOG	=	0x00ef
                           0000EE   397 _IE_GPIO	=	0x00ee
                           0000ED   398 _IE_PWMX	=	0x00ed
                           0000EC   399 _IE_UART1	=	0x00ec
                           0000EB   400 _IE_ADC	=	0x00eb
                           0000EA   401 _IE_USB	=	0x00ea
                           0000E9   402 _IE_TKEY	=	0x00e9
                           0000E8   403 _IE_SPI0	=	0x00e8
                           000097   404 _SCK	=	0x0097
                           000097   405 _TXD1	=	0x0097
                           000097   406 _TIN5	=	0x0097
                           000096   407 _MISO	=	0x0096
                           000096   408 _RXD1	=	0x0096
                           000096   409 _TIN4	=	0x0096
                           000095   410 _MOSI	=	0x0095
                           000095   411 _PWM1	=	0x0095
                           000095   412 _TIN3	=	0x0095
                           000095   413 _UCC2	=	0x0095
                           000095   414 _AIN2	=	0x0095
                           000094   415 _T2_	=	0x0094
                           000094   416 _CAP1_	=	0x0094
                           000094   417 _SCS	=	0x0094
                           000094   418 _TIN2	=	0x0094
                           000094   419 _UCC1	=	0x0094
                           000094   420 _AIN1	=	0x0094
                           000093   421 _TXD_	=	0x0093
                           000092   422 _RXD_	=	0x0092
                           000091   423 _T2EX	=	0x0091
                           000091   424 _CAP2	=	0x0091
                           000091   425 _TIN1	=	0x0091
                           000091   426 _VBUS2	=	0x0091
                           000091   427 _AIN0	=	0x0091
                           000090   428 _T2	=	0x0090
                           000090   429 _CAP1	=	0x0090
                           000090   430 _TIN0	=	0x0090
                           0000B7   431 _UDM	=	0x00b7
                           0000B6   432 _UDP	=	0x00b6
                           0000B5   433 _T1	=	0x00b5
                           0000B4   434 _PWM2	=	0x00b4
                           0000B4   435 _RXD1_	=	0x00b4
                           0000B4   436 _T0	=	0x00b4
                           0000B3   437 _INT1	=	0x00b3
                           0000B2   438 _TXD1_	=	0x00b2
                           0000B2   439 _INT0	=	0x00b2
                           0000B2   440 _VBUS1	=	0x00b2
                           0000B2   441 _AIN3	=	0x00b2
                           0000B1   442 _PWM2_	=	0x00b1
                           0000B1   443 _TXD	=	0x00b1
                           0000B0   444 _PWM1_	=	0x00b0
                           0000B0   445 _RXD	=	0x00b0
                           00008F   446 _TF1	=	0x008f
                           00008E   447 _TR1	=	0x008e
                           00008D   448 _TF0	=	0x008d
                           00008C   449 _TR0	=	0x008c
                           00008B   450 _IE1	=	0x008b
                           00008A   451 _IT1	=	0x008a
                           000089   452 _IE0	=	0x0089
                           000088   453 _IT0	=	0x0088
                           00009F   454 _SM0	=	0x009f
                           00009E   455 _SM1	=	0x009e
                           00009D   456 _SM2	=	0x009d
                           00009C   457 _REN	=	0x009c
                           00009B   458 _TB8	=	0x009b
                           00009A   459 _RB8	=	0x009a
                           000099   460 _TI	=	0x0099
                           000098   461 _RI	=	0x0098
                           0000CF   462 _TF2	=	0x00cf
                           0000CF   463 _CAP1F	=	0x00cf
                           0000CE   464 _EXF2	=	0x00ce
                           0000CD   465 _RCLK	=	0x00cd
                           0000CC   466 _TCLK	=	0x00cc
                           0000CB   467 _EXEN2	=	0x00cb
                           0000CA   468 _TR2	=	0x00ca
                           0000C9   469 _C_T2	=	0x00c9
                           0000C8   470 _CP_RL2	=	0x00c8
                           0000FF   471 _S0_FST_ACT	=	0x00ff
                           0000FE   472 _S0_IF_OV	=	0x00fe
                           0000FD   473 _S0_IF_FIRST	=	0x00fd
                           0000FC   474 _S0_IF_BYTE	=	0x00fc
                           0000FB   475 _S0_FREE	=	0x00fb
                           0000FA   476 _S0_T_FIFO	=	0x00fa
                           0000F8   477 _S0_R_FIFO	=	0x00f8
                           0000C7   478 _U1SM0	=	0x00c7
                           0000C5   479 _U1SMOD	=	0x00c5
                           0000C4   480 _U1REN	=	0x00c4
                           0000C3   481 _U1TB8	=	0x00c3
                           0000C2   482 _U1RB8	=	0x00c2
                           0000C1   483 _U1TI	=	0x00c1
                           0000C0   484 _U1RI	=	0x00c0
                           000087   485 _CMPO	=	0x0087
                           000086   486 _CMP_IF	=	0x0086
                           000085   487 _ADC_IF	=	0x0085
                           000084   488 _ADC_START	=	0x0084
                           000083   489 _CMP_CHAN	=	0x0083
                           000081   490 _ADC_CHAN1	=	0x0081
                           000080   491 _ADC_CHAN0	=	0x0080
                           0000DF   492 _U_IS_NAK	=	0x00df
                           0000DE   493 _U_TOG_OK	=	0x00de
                           0000DD   494 _U_SIE_FREE	=	0x00dd
                           0000DC   495 _UIF_FIFO_OV	=	0x00dc
                           0000DB   496 _UIF_HST_SOF	=	0x00db
                           0000DA   497 _UIF_SUSPEND	=	0x00da
                           0000D9   498 _UIF_TRANSFER	=	0x00d9
                           0000D8   499 _UIF_DETECT	=	0x00d8
                           0000D8   500 _UIF_BUS_RST	=	0x00d8
                                    501 ;--------------------------------------------------------
                                    502 ; overlayable register banks
                                    503 ;--------------------------------------------------------
                                    504 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        505 	.ds 8
                                    506 ;--------------------------------------------------------
                                    507 ; internal ram data
                                    508 ;--------------------------------------------------------
                                    509 	.area DSEG    (DATA)
      000000                        510 _pEndPoint_OUT_CallBack::
      000000                        511 	.ds 10
      00000A                        512 _pEndPoint_SOF_CallBack::
      00000A                        513 	.ds 10
      000014                        514 _pEndPoint_IN_CallBack::
      000014                        515 	.ds 10
      00001E                        516 _pEndPoint_SETUP_CallBack::
      00001E                        517 	.ds 10
                                    518 ;--------------------------------------------------------
                                    519 ; overlayable items in internal ram 
                                    520 ;--------------------------------------------------------
                                    521 ;--------------------------------------------------------
                                    522 ; indirectly addressable internal ram data
                                    523 ;--------------------------------------------------------
                                    524 	.area ISEG    (DATA)
                                    525 ;--------------------------------------------------------
                                    526 ; absolute internal ram data
                                    527 ;--------------------------------------------------------
                                    528 	.area IABS    (ABS,DATA)
                                    529 	.area IABS    (ABS,DATA)
                                    530 ;--------------------------------------------------------
                                    531 ; bit data
                                    532 ;--------------------------------------------------------
                                    533 	.area BSEG    (BIT)
                                    534 ;--------------------------------------------------------
                                    535 ; paged external ram data
                                    536 ;--------------------------------------------------------
                                    537 	.area PSEG    (PAG,XDATA)
                                    538 ;--------------------------------------------------------
                                    539 ; external ram data
                                    540 ;--------------------------------------------------------
                                    541 	.area XSEG    (XDATA)
                                    542 ;--------------------------------------------------------
                                    543 ; absolute external ram data
                                    544 ;--------------------------------------------------------
                                    545 	.area XABS    (ABS,XDATA)
                                    546 ;--------------------------------------------------------
                                    547 ; external initialized ram data
                                    548 ;--------------------------------------------------------
                                    549 	.area XISEG   (XDATA)
                                    550 	.area HOME    (CODE)
                                    551 	.area GSINIT0 (CODE)
                                    552 	.area GSINIT1 (CODE)
                                    553 	.area GSINIT2 (CODE)
                                    554 	.area GSINIT3 (CODE)
                                    555 	.area GSINIT4 (CODE)
                                    556 	.area GSINIT5 (CODE)
                                    557 	.area GSINIT  (CODE)
                                    558 	.area GSFINAL (CODE)
                                    559 	.area CSEG    (CODE)
                                    560 ;--------------------------------------------------------
                                    561 ; global & static initialisations
                                    562 ;--------------------------------------------------------
                                    563 	.area HOME    (CODE)
                                    564 	.area GSINIT  (CODE)
                                    565 	.area GSFINAL (CODE)
                                    566 	.area GSINIT  (CODE)
                                    567 ;	usb_it.c:8: code const void (*pEndPoint_OUT_CallBack[])(void) =
      000000 75*00r00         [24]  568 	mov	(_pEndPoint_OUT_CallBack + 0),#_USB_EP0_OUT
      000003 75*01s00         [24]  569 	mov	(_pEndPoint_OUT_CallBack + 1),#(_USB_EP0_OUT >> 8)
      000006 75*02r00         [24]  570 	mov	((_pEndPoint_OUT_CallBack + 0x0002) + 0),#_NOP_Process
      000009 75*03s00         [24]  571 	mov	((_pEndPoint_OUT_CallBack + 0x0002) + 1),#(_NOP_Process >> 8)
      00000C 75*04r00         [24]  572 	mov	((_pEndPoint_OUT_CallBack + 0x0004) + 0),#_USB_EP2_OUT
      00000F 75*05s00         [24]  573 	mov	((_pEndPoint_OUT_CallBack + 0x0004) + 1),#(_USB_EP2_OUT >> 8)
      000012 75*06r00         [24]  574 	mov	((_pEndPoint_OUT_CallBack + 0x0006) + 0),#_NOP_Process
      000015 75*07s00         [24]  575 	mov	((_pEndPoint_OUT_CallBack + 0x0006) + 1),#(_NOP_Process >> 8)
      000018 75*08r00         [24]  576 	mov	((_pEndPoint_OUT_CallBack + 0x0008) + 0),#_NOP_Process
      00001B 75*09s00         [24]  577 	mov	((_pEndPoint_OUT_CallBack + 0x0008) + 1),#(_NOP_Process >> 8)
                                    578 ;	usb_it.c:17: code const void (*pEndPoint_SOF_CallBack[])(void) =
      00001E 75*0Ar00         [24]  579 	mov	(_pEndPoint_SOF_CallBack + 0),#_NOP_Process
      000021 75*0Bs00         [24]  580 	mov	(_pEndPoint_SOF_CallBack + 1),#(_NOP_Process >> 8)
      000024 75*0Cr00         [24]  581 	mov	((_pEndPoint_SOF_CallBack + 0x0002) + 0),#_NOP_Process
      000027 75*0Ds00         [24]  582 	mov	((_pEndPoint_SOF_CallBack + 0x0002) + 1),#(_NOP_Process >> 8)
      00002A 75*0Er00         [24]  583 	mov	((_pEndPoint_SOF_CallBack + 0x0004) + 0),#_NOP_Process
      00002D 75*0Fs00         [24]  584 	mov	((_pEndPoint_SOF_CallBack + 0x0004) + 1),#(_NOP_Process >> 8)
      000030 75*10r00         [24]  585 	mov	((_pEndPoint_SOF_CallBack + 0x0006) + 0),#_NOP_Process
      000033 75*11s00         [24]  586 	mov	((_pEndPoint_SOF_CallBack + 0x0006) + 1),#(_NOP_Process >> 8)
      000036 75*12r00         [24]  587 	mov	((_pEndPoint_SOF_CallBack + 0x0008) + 0),#_NOP_Process
      000039 75*13s00         [24]  588 	mov	((_pEndPoint_SOF_CallBack + 0x0008) + 1),#(_NOP_Process >> 8)
                                    589 ;	usb_it.c:26: code const void (*pEndPoint_IN_CallBack[])(void) =
      00003C 75*14r00         [24]  590 	mov	(_pEndPoint_IN_CallBack + 0),#_USB_EP0_IN
      00003F 75*15s00         [24]  591 	mov	(_pEndPoint_IN_CallBack + 1),#(_USB_EP0_IN >> 8)
      000042 75*16r00         [24]  592 	mov	((_pEndPoint_IN_CallBack + 0x0002) + 0),#_USB_EP1_IN
      000045 75*17s00         [24]  593 	mov	((_pEndPoint_IN_CallBack + 0x0002) + 1),#(_USB_EP1_IN >> 8)
      000048 75*18r00         [24]  594 	mov	((_pEndPoint_IN_CallBack + 0x0004) + 0),#_USB_EP2_IN
      00004B 75*19s00         [24]  595 	mov	((_pEndPoint_IN_CallBack + 0x0004) + 1),#(_USB_EP2_IN >> 8)
      00004E 75*1Ar00         [24]  596 	mov	((_pEndPoint_IN_CallBack + 0x0006) + 0),#_NOP_Process
      000051 75*1Bs00         [24]  597 	mov	((_pEndPoint_IN_CallBack + 0x0006) + 1),#(_NOP_Process >> 8)
      000054 75*1Cr00         [24]  598 	mov	((_pEndPoint_IN_CallBack + 0x0008) + 0),#_NOP_Process
      000057 75*1Ds00         [24]  599 	mov	((_pEndPoint_IN_CallBack + 0x0008) + 1),#(_NOP_Process >> 8)
                                    600 ;	usb_it.c:35: code const void (*pEndPoint_SETUP_CallBack[])(void) =
      00005A 75*1Er00         [24]  601 	mov	(_pEndPoint_SETUP_CallBack + 0),#_USB_EP0_SETUP
      00005D 75*1Fs00         [24]  602 	mov	(_pEndPoint_SETUP_CallBack + 1),#(_USB_EP0_SETUP >> 8)
      000060 75*20r00         [24]  603 	mov	((_pEndPoint_SETUP_CallBack + 0x0002) + 0),#_NOP_Process
      000063 75*21s00         [24]  604 	mov	((_pEndPoint_SETUP_CallBack + 0x0002) + 1),#(_NOP_Process >> 8)
      000066 75*22r00         [24]  605 	mov	((_pEndPoint_SETUP_CallBack + 0x0004) + 0),#_NOP_Process
      000069 75*23s00         [24]  606 	mov	((_pEndPoint_SETUP_CallBack + 0x0004) + 1),#(_NOP_Process >> 8)
      00006C 75*24r00         [24]  607 	mov	((_pEndPoint_SETUP_CallBack + 0x0006) + 0),#_NOP_Process
      00006F 75*25s00         [24]  608 	mov	((_pEndPoint_SETUP_CallBack + 0x0006) + 1),#(_NOP_Process >> 8)
      000072 75*26r00         [24]  609 	mov	((_pEndPoint_SETUP_CallBack + 0x0008) + 0),#_NOP_Process
      000075 75*27s00         [24]  610 	mov	((_pEndPoint_SETUP_CallBack + 0x0008) + 1),#(_NOP_Process >> 8)
                                    611 ;--------------------------------------------------------
                                    612 ; Home
                                    613 ;--------------------------------------------------------
                                    614 	.area HOME    (CODE)
                                    615 	.area HOME    (CODE)
                                    616 ;--------------------------------------------------------
                                    617 ; code
                                    618 ;--------------------------------------------------------
                                    619 	.area CSEG    (CODE)
                                    620 ;------------------------------------------------------------
                                    621 ;Allocation info for local variables in function 'NOP_Process'
                                    622 ;------------------------------------------------------------
                                    623 ;	usb_it.c:5: void NOP_Process(void) {}
                                    624 ;	-----------------------------------------
                                    625 ;	 function NOP_Process
                                    626 ;	-----------------------------------------
      000000                        627 _NOP_Process:
                           000007   628 	ar7 = 0x07
                           000006   629 	ar6 = 0x06
                           000005   630 	ar5 = 0x05
                           000004   631 	ar4 = 0x04
                           000003   632 	ar3 = 0x03
                           000002   633 	ar2 = 0x02
                           000001   634 	ar1 = 0x01
                           000000   635 	ar0 = 0x00
      000000 22               [24]  636 	ret
                                    637 ;------------------------------------------------------------
                                    638 ;Allocation info for local variables in function 'USBInterrupt'
                                    639 ;------------------------------------------------------------
                                    640 ;	usb_it.c:44: void USBInterrupt(void) {
                                    641 ;	-----------------------------------------
                                    642 ;	 function USBInterrupt
                                    643 ;	-----------------------------------------
      000001                        644 _USBInterrupt:
                                    645 ;	usb_it.c:45: if(UIF_TRANSFER) {
      000001 20 D9 03         [24]  646 	jb	_UIF_TRANSFER,00149$
      000004 02r00rCB         [24]  647 	ljmp	00107$
      000007                        648 00149$:
                                    649 ;	usb_it.c:47: switch (USB_INT_ST & MASK_UIS_TOKEN) {
      000007 AE D9            [24]  650 	mov	r6,_USB_INT_ST
      000009 53 06 30         [24]  651 	anl	ar6,#0x30
      00000C 7F 00            [12]  652 	mov	r7,#0x00
      00000E BE 00 05         [24]  653 	cjne	r6,#0x00,00150$
      000011 BF 00 02         [24]  654 	cjne	r7,#0x00,00150$
      000014 80 1C            [24]  655 	sjmp	00101$
      000016                        656 00150$:
      000016 BE 10 05         [24]  657 	cjne	r6,#0x10,00151$
      000019 BF 00 02         [24]  658 	cjne	r7,#0x00,00151$
      00001C 80 3B            [24]  659 	sjmp	00102$
      00001E                        660 00151$:
      00001E BE 20 05         [24]  661 	cjne	r6,#0x20,00152$
      000021 BF 00 02         [24]  662 	cjne	r7,#0x00,00152$
      000024 80 59            [24]  663 	sjmp	00103$
      000026                        664 00152$:
      000026 BE 30 06         [24]  665 	cjne	r6,#0x30,00153$
      000029 BF 00 03         [24]  666 	cjne	r7,#0x00,00153$
      00002C 02r00rA5         [24]  667 	ljmp	00104$
      00002F                        668 00153$:
      00002F 02r00rC9         [24]  669 	ljmp	00105$
                                    670 ;	usb_it.c:48: case UIS_TOKEN_OUT:
      000032                        671 00101$:
                                    672 ;	usb_it.c:49: (*pEndPoint_OUT_CallBack[USB_INT_ST & MASK_UIS_ENDP])();
      000032 AE D9            [24]  673 	mov	r6,_USB_INT_ST
      000034 53 06 0F         [24]  674 	anl	ar6,#0x0f
      000037 7F 00            [12]  675 	mov	r7,#0x00
      000039 EE               [12]  676 	mov	a,r6
      00003A 2E               [12]  677 	add	a,r6
      00003B FE               [12]  678 	mov	r6,a
      00003C EF               [12]  679 	mov	a,r7
      00003D 33               [12]  680 	rlc	a
      00003E EE               [12]  681 	mov	a,r6
      00003F 24r00            [12]  682 	add	a,#_pEndPoint_OUT_CallBack
      000041 F9               [12]  683 	mov	r1,a
      000042 87 06            [24]  684 	mov	ar6,@r1
      000044 09               [12]  685 	inc	r1
      000045 87 07            [24]  686 	mov	ar7,@r1
      000047 C0 07            [24]  687 	push	ar7
      000049 C0 06            [24]  688 	push	ar6
      00004B 8E 82            [24]  689 	mov	dpl,r6
      00004D 8F 83            [24]  690 	mov	dph,r7
      00004F 12r00r00         [24]  691 	lcall	__sdcc_call_dptr
      000052 D0 06            [24]  692 	pop	ar6
      000054 D0 07            [24]  693 	pop	ar7
                                    694 ;	usb_it.c:50: break;
      000056 02r00rC9         [24]  695 	ljmp	00105$
                                    696 ;	usb_it.c:51: case UIS_TOKEN_SOF:
      000059                        697 00102$:
                                    698 ;	usb_it.c:52: (*pEndPoint_SOF_CallBack[USB_INT_ST & MASK_UIS_ENDP])();
      000059 AE D9            [24]  699 	mov	r6,_USB_INT_ST
      00005B 53 06 0F         [24]  700 	anl	ar6,#0x0f
      00005E 7F 00            [12]  701 	mov	r7,#0x00
      000060 EE               [12]  702 	mov	a,r6
      000061 2E               [12]  703 	add	a,r6
      000062 FE               [12]  704 	mov	r6,a
      000063 EF               [12]  705 	mov	a,r7
      000064 33               [12]  706 	rlc	a
      000065 EE               [12]  707 	mov	a,r6
      000066 24r0A            [12]  708 	add	a,#_pEndPoint_SOF_CallBack
      000068 F9               [12]  709 	mov	r1,a
      000069 87 06            [24]  710 	mov	ar6,@r1
      00006B 09               [12]  711 	inc	r1
      00006C 87 07            [24]  712 	mov	ar7,@r1
      00006E C0 07            [24]  713 	push	ar7
      000070 C0 06            [24]  714 	push	ar6
      000072 8E 82            [24]  715 	mov	dpl,r6
      000074 8F 83            [24]  716 	mov	dph,r7
      000076 12r00r00         [24]  717 	lcall	__sdcc_call_dptr
      000079 D0 06            [24]  718 	pop	ar6
      00007B D0 07            [24]  719 	pop	ar7
                                    720 ;	usb_it.c:53: break;
                                    721 ;	usb_it.c:54: case UIS_TOKEN_IN:
      00007D 80 4A            [24]  722 	sjmp	00105$
      00007F                        723 00103$:
                                    724 ;	usb_it.c:55: (*pEndPoint_IN_CallBack[USB_INT_ST & MASK_UIS_ENDP])();
      00007F AE D9            [24]  725 	mov	r6,_USB_INT_ST
      000081 53 06 0F         [24]  726 	anl	ar6,#0x0f
      000084 7F 00            [12]  727 	mov	r7,#0x00
      000086 EE               [12]  728 	mov	a,r6
      000087 2E               [12]  729 	add	a,r6
      000088 FE               [12]  730 	mov	r6,a
      000089 EF               [12]  731 	mov	a,r7
      00008A 33               [12]  732 	rlc	a
      00008B EE               [12]  733 	mov	a,r6
      00008C 24r14            [12]  734 	add	a,#_pEndPoint_IN_CallBack
      00008E F9               [12]  735 	mov	r1,a
      00008F 87 06            [24]  736 	mov	ar6,@r1
      000091 09               [12]  737 	inc	r1
      000092 87 07            [24]  738 	mov	ar7,@r1
      000094 C0 07            [24]  739 	push	ar7
      000096 C0 06            [24]  740 	push	ar6
      000098 8E 82            [24]  741 	mov	dpl,r6
      00009A 8F 83            [24]  742 	mov	dph,r7
      00009C 12r00r00         [24]  743 	lcall	__sdcc_call_dptr
      00009F D0 06            [24]  744 	pop	ar6
      0000A1 D0 07            [24]  745 	pop	ar7
                                    746 ;	usb_it.c:56: break;
                                    747 ;	usb_it.c:57: case UIS_TOKEN_SETUP:
      0000A3 80 24            [24]  748 	sjmp	00105$
      0000A5                        749 00104$:
                                    750 ;	usb_it.c:58: (*pEndPoint_SETUP_CallBack[USB_INT_ST & MASK_UIS_ENDP])();
      0000A5 AE D9            [24]  751 	mov	r6,_USB_INT_ST
      0000A7 53 06 0F         [24]  752 	anl	ar6,#0x0f
      0000AA 7F 00            [12]  753 	mov	r7,#0x00
      0000AC EE               [12]  754 	mov	a,r6
      0000AD 2E               [12]  755 	add	a,r6
      0000AE FE               [12]  756 	mov	r6,a
      0000AF EF               [12]  757 	mov	a,r7
      0000B0 33               [12]  758 	rlc	a
      0000B1 EE               [12]  759 	mov	a,r6
      0000B2 24r1E            [12]  760 	add	a,#_pEndPoint_SETUP_CallBack
      0000B4 F9               [12]  761 	mov	r1,a
      0000B5 87 06            [24]  762 	mov	ar6,@r1
      0000B7 09               [12]  763 	inc	r1
      0000B8 87 07            [24]  764 	mov	ar7,@r1
      0000BA C0 07            [24]  765 	push	ar7
      0000BC C0 06            [24]  766 	push	ar6
      0000BE 8E 82            [24]  767 	mov	dpl,r6
      0000C0 8F 83            [24]  768 	mov	dph,r7
      0000C2 12r00r00         [24]  769 	lcall	__sdcc_call_dptr
      0000C5 D0 06            [24]  770 	pop	ar6
      0000C7 D0 07            [24]  771 	pop	ar7
                                    772 ;	usb_it.c:60: }
      0000C9                        773 00105$:
                                    774 ;	usb_it.c:62: UIF_TRANSFER = 0; 													// Clear interrupt flag
                                    775 ;	assignBit
      0000C9 C2 D9            [12]  776 	clr	_UIF_TRANSFER
      0000CB                        777 00107$:
                                    778 ;	usb_it.c:66: if(UIF_BUS_RST) {
      0000CB 30 D8 15         [24]  779 	jnb	_UIF_BUS_RST,00109$
                                    780 ;	usb_it.c:67: UEP0_CTRL = UEP_R_RES_ACK | UEP_T_RES_NAK;
      0000CE 75 DC 02         [24]  781 	mov	_UEP0_CTRL,#0x02
                                    782 ;	usb_it.c:68: UEP1_CTRL = bUEP_AUTO_TOG | UEP_R_RES_ACK;
      0000D1 75 D2 10         [24]  783 	mov	_UEP1_CTRL,#0x10
                                    784 ;	usb_it.c:69: UEP2_CTRL = bUEP_AUTO_TOG | UEP_R_RES_ACK | UEP_T_RES_NAK;
      0000D4 75 D4 12         [24]  785 	mov	_UEP2_CTRL,#0x12
                                    786 ;	usb_it.c:70: UEP3_CTRL = bUEP_AUTO_TOG | UEP_R_RES_ACK | UEP_T_RES_NAK;
      0000D7 75 D6 12         [24]  787 	mov	_UEP3_CTRL,#0x12
                                    788 ;	usb_it.c:71: USB_DEV_AD = 0x00;
      0000DA 75 E3 00         [24]  789 	mov	_USB_DEV_AD,#0x00
                                    790 ;	usb_it.c:72: UIF_SUSPEND = 0;
                                    791 ;	assignBit
      0000DD C2 DA            [12]  792 	clr	_UIF_SUSPEND
                                    793 ;	usb_it.c:73: UIF_TRANSFER = 0;
                                    794 ;	assignBit
      0000DF C2 D9            [12]  795 	clr	_UIF_TRANSFER
                                    796 ;	usb_it.c:74: UIF_BUS_RST = 0;													// Clear interrupt flag
                                    797 ;	assignBit
      0000E1 C2 D8            [12]  798 	clr	_UIF_BUS_RST
      0000E3                        799 00109$:
                                    800 ;	usb_it.c:78: if (UIF_SUSPEND) {
                                    801 ;	usb_it.c:79: UIF_SUSPEND = 0;
                                    802 ;	assignBit
      0000E3 10 DA 01         [24]  803 	jbc	_UIF_SUSPEND,00155$
      0000E6 22               [24]  804 	ret
      0000E7                        805 00155$:
                                    806 ;	usb_it.c:80: if ( USB_MIS_ST & bUMS_SUSPEND ) {					// Suspend
      0000E7 E5 DA            [12]  807 	mov	a,_USB_MIS_ST
      0000E9 20 E2 03         [24]  808 	jb	acc.2,00115$
                                    809 ;	usb_it.c:92: USB_INT_FG = 0xFF;		// Clear interrupt flag
      0000EC 75 D8 FF         [24]  810 	mov	_USB_INT_FG,#0xff
      0000EF                        811 00115$:
                                    812 ;	usb_it.c:95: }
      0000EF 22               [24]  813 	ret
                                    814 	.area CSEG    (CODE)
                                    815 	.area CONST   (CODE)
                                    816 	.area XINIT   (CODE)
                                    817 	.area CABS    (ABS,CODE)
